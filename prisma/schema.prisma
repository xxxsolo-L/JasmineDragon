generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
  subCategories SubCategory[]

}

model Order {
  id          Int         @id @default(autoincrement())
  userId      Int
  total       Float
  status      String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  address     String
  orderNumber String
  User        User        @relation(fields: [userId], references: [id])
  OrderItem   OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Product {
  id            Int          @id @default(autoincrement())
  name          String
  description   String
  price         String
  currency      String      @default("MDL")
  imageUrl      String[]
  stock         Int
  categoryId    Int
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  discount      Float?       @default(0.0)
  subCategoryId Int?
  Category      Category     @relation(fields: [categoryId], references: [id])
  SubCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  Review        Review[]
  nameRo        String?
  descriptionRo String?
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model SubCategory {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  Product    Product[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
  Review    Review[]
}
